//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object must be of type DateOnly..
        /// </summary>
        internal static string Arg_MustBeDateOnly {
            get {
                return ResourceManager.GetString("Arg_MustBeDateOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object must be of type TimeOnly..
        /// </summary>
        internal static string Arg_MustBeTimeOnly {
            get {
                return ResourceManager.GetString("Arg_MustBeTimeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format specifier was invalid..
        /// </summary>
        internal static string Argument_BadFormatSpecifier {
            get {
                return ResourceManager.GetString("Argument_BadFormatSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The only allowed values for the styles are AllowWhiteSpaces, AllowTrailingWhite, AllowLeadingWhite, and AllowInnerWhite..
        /// </summary>
        internal static string Argument_InvalidDateStyles {
            get {
                return ResourceManager.GetString("Argument_InvalidDateStyles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value to add was out of range..
        /// </summary>
        internal static string ArgumentOutOfRange_AddValue {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_AddValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hour, Minute, and Second parameters describe an un-representable DateTime..
        /// </summary>
        internal static string ArgumentOutOfRange_BadHourMinuteSecond {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BadHourMinuteSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Day number must be between 0 and DateOnly.MaxValue.DayNumber..
        /// </summary>
        internal static string ArgumentOutOfRange_DayNumber {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_DayNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid values are between {0} and {1}, inclusive..
        /// </summary>
        internal static string ArgumentOutOfRange_Range {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ticks must be between 0 and and TimeOnly.MaxValue.Ticks..
        /// </summary>
        internal static string ArgumentOutOfRange_TimeOnlyBadTicks {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_TimeOnlyBadTicks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String &apos;{0}&apos; was not recognized as a valid DateOnly..
        /// </summary>
        internal static string Format_BadDateOnly {
            get {
                return ResourceManager.GetString("Format_BadDateOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find a matching quote character for the character &apos;{0}&apos;..
        /// </summary>
        internal static string Format_BadQuote {
            get {
                return ResourceManager.GetString("Format_BadQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String &apos;{0}&apos; was not recognized as a valid TimeOnly..
        /// </summary>
        internal static string Format_BadTimeOnly {
            get {
                return ResourceManager.GetString("Format_BadTimeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String &apos;{0}&apos; contains parts which are not specific to the {1}..
        /// </summary>
        internal static string Format_DateTimeOnlyContainsNoneDateParts {
            get {
                return ResourceManager.GetString("Format_DateTimeOnlyContainsNoneDateParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input string was not in a correct format..
        /// </summary>
        internal static string Format_InvalidString {
            get {
                return ResourceManager.GetString("Format_InvalidString", resourceCulture);
            }
        }
    }
}
